#Opera House

building_elgar_opera = {
	building_group = bg_opera
	icon = "gfx/interface/icons/building_icons/building_elgar_opera.dds"

	unlocking_technologies = {
		elgar_classicism_tech
	}

	production_method_groups = {
		pmg_entertainment_type
		pmg_elgar_orchestra #Morge
		pmg_elgar_ballet_school #Morge
		pmg_data_optimization_light_industry
	}

	can_build_government = {
		OR = {
			any_scope_building = {
				is_building_type = building_elgar_opera
			}
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 5
			}
		}
	}

	can_build_private = {
		OR = {
			any_scope_building = {
				is_building_type = building_elgar_opera
			}
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 5
			}
		}
	}	

	required_construction = construction_cost_high

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"
}

# Publishing Industry

building_manzoni_publishing_industry = {
	building_group = bg_light_industry
	icon = "gfx/interface/icons/building_icons/building_manzoni_publishing_industry.dds"

	unlocking_technologies = {
		mass_communication
	}

	production_method_groups = {
		manzoni_pmg_communication #Type of communication MORGENRÖTE
		manzoni_pmg_building_publishing_industry_automation #Publishing Industry MORGENRÖTE
		pmg_broadcast_media_industry #Broadcast Industry
		pmg_digital_media_industry #Digital Media Industry
		pmg_data_optimization_heavy_industry
	}
	
	can_build_government = {
		has_building = building_urban_center				
	}

	can_build_private = {
		has_building = building_urban_center				
	}

	required_construction = construction_cost_very_high

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_light_industry.dds"
}

#Instrument Workshops

building_instrument_workshops = {
	building_group = bg_light_industry
	icon = "gfx/interface/icons/building_icons/building_elgar_instrument_workshop.dds"
	
	unlocking_technologies = {
		elgar_classicism_tech
	}

	production_method_groups = {
		pmg_elgar_instruments
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_high

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_light_industry.dds"
}

#Telegraph and Radio Stations for Railway

building_railway = {
	building_group = bg_private_infrastructure
	icon = "gfx/interface/icons/building_icons/building_railway.dds"
	
	ai_nationalization_desire = 0.5 # AI is reluctant to privatize railways since they are likely to need subsidies anyway
	
	unlocking_technologies = {
		railways
	}

	production_method_groups = {
		pmg_base_building_railway
		pmg_passenger_trains
		pmg_transport_infrastructure_building_railway
		#pmg_gaudi_communication #MORGENRÖTE
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_very_high
	
	ai_value = {
		value = 2000 # Railways are important

		if = { # Trans-Siberian Railway
			limit = {
				owner = {
					has_journal_entry = je_trans_siberian_railway
				}
				OR = {
					state_region = s:STATE_MOSCOW
					state_region = s:STATE_YAROSLAVL
					state_region = s:STATE_NIZHNY_NOVGOROD
					state_region = s:STATE_CHUVASHIA
					state_region = s:STATE_KAZAN
					state_region = s:STATE_UFA
					state_region = s:STATE_CHELYABINSK
					state_region = s:STATE_URAL
					state_region = s:STATE_TOBOLSK
					state_region = s:STATE_TOMSK
					state_region = s:STATE_KRASNOYARSK
					state_region = s:STATE_IRKUTSK
					state_region = s:STATE_BURYATIA
					state_region = s:STATE_TRANS_BAIKAL
					state_region = s:STATE_YAKUTSK
					state_region = s:STATE_OKHOTSK
					state_region = s:STATE_AMUR
					state_region = s:STATE_OUTER_MANCHURIA
				}
				NOR = {
					has_building = building_railway
					any_scope_building = {
						is_building_type = building_railway
						is_under_construction = yes
					}
				}
			}
			add = 10000
		}
		else_if = { # Shinkansen, my beloved
			limit = {
				owner = {
					has_journal_entry = je_meiji_economy
				}
				is_incorporated = yes # Japan proper
				NOR = {
					has_building = building_railway
					any_scope_building = {
						is_building_type = building_railway
						is_under_construction = yes
					}
				}
			}
			add = 10000
		}
		else_if = { # Trans-Continental Railways
			limit = {
				owner = {
					has_journal_entry = je_trans_continental_railway
				}
				OR = {
					state_region = s:STATE_NEBRASKA
					state_region = s:STATE_WYOMING
					state_region = s:STATE_UTAH
					state_region = s:STATE_NEVADA
					state_region = s:STATE_CALIFORNIA
				}
				NOR = {
					has_building = building_railway
					any_scope_building = {
						is_building_type = building_railway
						is_under_construction = yes
					}
				}
			}
			add = 10000
		}
		else_if = { # Canadian Pacific Highway
			limit = {
				owner = {
					has_journal_entry = je_canada_pacific_railway
				}
				OR = {
					state_region = s:STATE_QUEBEC
					state_region = s:STATE_BRITISH_COLUMBIA
					state_region = s:STATE_ONTARIO
					state_region = s:STATE_ALBERTA
					state_region = s:STATE_SASKATCHEWAN
					state_region = s:STATE_MANITOBA
				}
				NOR = {
					has_building = building_railway
					any_scope_building = {
						is_building_type = building_railway
						is_under_construction = yes
					}
				}
			}
			add = 10000
		}

		if = { # Manchurian Railway
			limit = {
				exists = c:RUS
				c:RUS ?= owner
				OR = {
					region = sr:region_manchuria
				}
				any_scope_building = {
					is_building_type = building_railway
					levels_owned_by_country = {  
						target = c:RUS  
						value  < 1
					}
				}
			}
			add = 10000
		}
	}
	
	should_auto_expand = { 
		occupancy >= 0.8
		OR = {
			cash_reserves_ratio > 0.5
			is_subsidized = yes
		}
		OR = {
			state = {
				sg:transportation = { 
					state_goods_pricier > 0.5
				}
			}
			state.market_access < 1
		}
		NOT = { is_under_construction = yes }

	}
	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_railways.dds"
}

# Mendelejev Rubber & Oil (In Tech & Res these are respectively Refinery Industry and Petrochemical Industry)

#Hydrogenation Plants (Oil Refinery Industry)
building_mendelejew_hydrogenation_plants = {
	building_group = bg_heavy_industry
	icon = "gfx/interface/icons/building_icons/building_mendelejew_hydrogenation_plants.dds"
	levels_per_mesh = 5

	unlocking_technologies = {
		oil_distillation
	}

	production_method_groups = {
		pmg_fuel_production
		#pmg_gasification_building_mendelejew_hydrogenation_plants
		pmg_automation_building_general
		pmg_transport_automation_building_general
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_modern

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_heavy_industry.dds"
}

#Synthetic Rubber Factory (Petrochemical Industry)
building_mendelejew_synthetic_rubber_factory = {
	building_group = bg_heavy_industry
	icon = "gfx/interface/icons/building_icons/building_mendelejew_synthetic_rubber_factory.dds"
	levels_per_mesh = 5

	unlocking_technologies = {
		plastics
	}

	production_method_groups = {
		pmg_plastics_production
		#pmg_mendelejew_isoprene
		pmg_automation_building_general
		pmg_transport_automation_building_general
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_modern

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_heavy_industry.dds"
}

# Airport

building_airport = {
	building_group = bg_private_infrastructure	
	icon = "gfx/interface/icons/building_icons/airport.dds"
	
	unlocking_technologies = {
		zeppelins
	}

	production_method_groups = {
		pmg_base_building_airport
		pmg_cargo_airport
		pmg_fuel_airport
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_very_high
	
	ai_value = 2000 # Airports are less important than railroads

	should_auto_expand = { 
		OR = {
			cash_reserves_ratio > 0.5
			is_subsidized = yes
		}
		state.market_access < 1
	}

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_railways.dds"
}