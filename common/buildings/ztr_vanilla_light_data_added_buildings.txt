# Arts Academy

building_arts_academy = {
	building_group = bg_arts

	city_type = city
	
	levels_per_mesh = 5

	unlocking_technologies = {
		romanticism
	}

	production_method_groups = {
		pmg_base_building_arts_academy
		pmg_ownership_building_arts_academy
		pmg_principle_freedom_of_movement_3
		pmg_data_optimization_light_industry
	}
	
	icon = "gfx/interface/icons/building_icons/building_arts_academy.dds"

	required_construction = construction_cost_medium
	
	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"
}

# Government Administration

building_government_administration = {
	building_group = bg_bureaucracy
	city_type = city

	levels_per_mesh = 10

	unlocking_technologies = {
		tech_bureaucracy
	}

	should_auto_expand = {
		occupancy >= 0.8
		OR = {
			state.tax_capacity < state.tax_capacity_usage
			owner = {
				bureaucracy < -10
			}
		}
	}

	production_method_groups = {
		pmg_base_building_government_administration
		pmg_government_administration_bureaucrat_professionalism
		pmg_government_administration_religious_administration
	}

	icon = "gfx/interface/icons/building_icons/building_government_administration.dds"

	required_construction = construction_cost_very_low

	ai_value = {
		# KAI: Excess bureaucracy should have lower priority than everything else
		value = 250

		# KAI: Prioritize states with insufficient tax capacity
		if = {
			limit = {
				is_incorporated = yes
			}
			add = {
				value = 30
				multiply = {
					# Scale inversely with surplus from 5 to 30
					value = tax_capacity_usage
					subtract = tax_capacity
					add = 30
				}
				min = 0
				max = 750
			}
		}
	}

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"
}

# University

building_university = {

	building_group = bg_technology

	city_type = city

	levels_per_mesh = 5

	unlocking_technologies = {
		academia
	}

	production_method_groups = {
		pmg_base_building_university
		pmg_university_academia
		pmg_principle_freedom_of_movement_3
		pmg_data_optimization_light_industry_university
	}

	icon = "gfx/interface/icons/building_icons/building_university.dds"

	required_construction = construction_cost_medium

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"

	ai_value = {
		value = 1000

		if = { # British dictates
			limit = {
				owner = {
					has_journal_entry = je_british_dictate_universities
				}
				OR = {
					state_region = s:STATE_WEST_BENGAL
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_MADRAS
				}
				NOR = {
					has_building = building_university
					any_scope_building = {
						is_building_type = building_university
						level > 3
					}
				}
			}
			add = 2000
		}
	}
}

building_textile_mills = {
	building_group = bg_light_industry
	icon = "gfx/interface/icons/building_icons/textile_industry.dds"
	city_type = city
	levels_per_mesh = 5
	
	ai_nationalization_desire = -0.25 # AI is generally fine with privatizing consumer goods industries
	
	unlocking_technologies = {
		manufacturies
	}

	production_method_groups = {
		pmg_base_building_textile_mills
		pmg_luxury_building_textile_mills
		pmg_automation_building_textile_mills
		pmg_data_optimization_light_industry
	}
	
	required_construction = construction_cost_high
	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_light_industry.dds"
}

building_paper_mills = {
	building_group = bg_light_industry
	icon = "gfx/interface/icons/building_icons/paper_mills.dds"
	
	ai_nationalization_desire = 0.25 # AI is a bit reluctant to privatize government goods
	
	unlocking_technologies = {
		manufacturies
	}

	city_type = city
	levels_per_mesh = 5

	production_method_groups = {
		pmg_base_building_paper_mills
		pmg_automation_building_paper_mills
		pmg_data_optimization_light_industry_paper
	}
	
	required_construction = construction_cost_high
	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_light_industry.dds"
}

building_port = {
	building_group = bg_private_infrastructure
	city_type = port
	icon = "gfx/interface/icons/building_icons/building_port.dds"

	port = yes

	unlocking_technologies = { navigation }

	production_method_groups = {
		pmg_base_building_port
		pmg_data_optimization_light_industry
	}

	required_construction = construction_cost_medium

	terrain_manipulator = urban_port

	potential = {
		is_coastal = yes
	}

	ownership_type = self

	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"
}